services:
  # 1. The Database Service
  user-service-db:
    image: postgres:latest
    container_name: user-service-db
    ports:
      - "5000:5432"
    volumes:
      - ./user-service/db_volumes/user-service-db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: momo
      POSTGRES_PASSWORD: momo
      POSTGRES_DB: db
    networks:
      - internal
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U momo -d db" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # 2. The Auth Database Service
  auth-service-db:
    image: postgres:latest
    container_name: auth-service-db
    ports:
      - "5001:5432"
    volumes:
      - ./auth-service/db_volumes/auth-service-db:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: momo
      POSTGRES_PASSWORD: momo
      POSTGRES_DB: db
    networks:
      - internal
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U momo -d db" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # 3. The Kafka Broker
  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - "9092:9092" # Internal listener for other services
      - "9094:9094" # External listener for my local machine
    volumes:
      - ./kafka_data:/bitnami/kafka
    environment:
      KAFKA_CFG_NODE_ID: 0
      KAFKA_CFG_PROCESS_ROLES: 'broker,controller'
      KAFKA_CFG_LISTENERS: 'PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094'
      KAFKA_CFG_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094'
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT'
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: '0@kafka:9093'
    networks:
      - internal

  # 4. The Billing Service
  billing-service:
    build:
      context: ./billing-service
    container_name: billing-service
    ports:
      - "4001:4001" # REST port
      - "9001:9001" # gRPC port
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - kafka
    networks:
      - internal

  # 5. The User Service
  user-service:
    build:
      context: ./user-service
    container_name: user-service
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://user-service-db:5432/db
      SPRING_DATASOURCE_USERNAME: momo
      SPRING_DATASOURCE_PASSWORD: momo
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_SQL_INIT_MODE: never
      BILLING_SERVICE_ADDRESS: billing-service
      BILLING_SERVICE_GRPC_PORT: 9001
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      user-service-db:
        condition: service_healthy
      billing-service:
        condition: service_started
      kafka:
        condition: service_started
    networks:
      - internal

  # 6. The Analytics Service
  analytics-service:
    build:
      context: ./analytics-service
    container_name: analytics-service
    ports:
      - "4002:4002"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - kafka
    networks:
      - internal

  # 7. The Auth Service
  auth-service:
    build:
      context: ./auth-service
    container_name: auth-service
    ports:
      - "4005:4005"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://auth-service-db:5432/db
      SPRING_DATASOURCE_USERNAME: momo
      SPRING_DATASOURCE_PASSWORD: momo
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_SQL_INIT_MODE: always
      JWT_SECRET: 988ef16e1ee16b45876847af3648b038bba865777541a5ce7e1ceec3a4d194a18f116bd2
    depends_on:
      auth-service-db:
        condition: service_healthy
    networks:
      - internal

  # 8. The API Gateway
  api-gateway:
    build:
      context: ./api-gateway
    container_name: api-gateway
    ports:
      - "4004:4004"
    depends_on:
      - user-service
      - analytics-service
      - auth-service
    networks:
      - internal

# Network Definition
networks:
  internal:
    driver: bridge